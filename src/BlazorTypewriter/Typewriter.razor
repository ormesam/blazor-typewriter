@implements IDisposable

<span class="typewriter @CustomClass">@Factory.DisplayText</span>

@code {
    [Parameter]
    public TypewriterFactory Factory { get; set; }

    [Parameter]
    public string CustomClass { get; set; }

    protected override Task OnInitializedAsync() {
        Factory.DisplayChanged += Factory_DisplayChanged;

        Task.Run(() => Factory.Run());

        return base.OnInitializedAsync();
    }

    public void Factory_DisplayChanged(object sender, EventArgs e) {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose() {
        Factory.DisplayChanged -= Factory_DisplayChanged;
        Factory.Stop();
    }
}