@implements IDisposable

<span class="typewriter @CustomClass">@Builder.DisplayText</span>

@code {
    [Parameter]
    public TypewriterBuilder Builder { get; set; }

    [Parameter]
    public string CustomClass { get; set; }

    protected override Task OnInitializedAsync() {
        Builder.DisplayChanged += Builder_DisplayChanged;

        Task.Run(() => Builder.Run());

        return base.OnInitializedAsync();
    }

    public void Builder_DisplayChanged(object sender, EventArgs e) {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose() {
        Builder.DisplayChanged -= Builder_DisplayChanged;
        Builder.Stop();
    }
}